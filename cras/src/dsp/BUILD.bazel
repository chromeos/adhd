# Copyright 2021 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load("//:utils.bzl", "require_config")

cc_library(
    name = "am",
    srcs = ["am.cc"],
    hdrs = ["am.h"],
    target_compatible_with = require_config("//:ml_build"),
    visibility = [
        ":__subpackages__",
        "//cras/benchmark:__pkg__",
        "//cras/src/server:__pkg__",
    ],
    deps = select({
        "//:ml_build": ["@pkg_config//tensorflowlite"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "dsp_helpers",
    hdrs = ["dsp_helpers.h"],
    visibility = [":__subpackages__"],
)

cc_library(
    name = "dsp",
    srcs = [
        "biquad.c",
        "crossover2.c",
        "eq2.c",
        "quad_rotation.c",
    ],
    hdrs = [
        "quad_rotation.h",
    ],
    visibility = [
        ":__subpackages__",
        "//cras/src/server:__pkg__",
        "//cras/src/tests:__pkg__",
    ],
    deps = [
        ":drc",
        ":dsp_helpers",
        ":dsp_util",
        "//cras/src/common",
        "//cras/src/dsp/rust",
        "//cras/src/server:dsp_types",
        "@thesofproject_sof",
    ],
)

cc_library(
    name = "eq2",
    srcs = ["eq2.c"],
    hdrs = ["eq2.h"],
    visibility = ["//cras/benchmark:__pkg__"],
    deps = [
        ":biquad",
        "@thesofproject_sof",
    ],
)

cc_library(
    name = "drc",
    srcs = ["drc.c"],
    hdrs = ["drc.h"],
    linkopts = ["-lm"],
    visibility = ["//cras/benchmark:__pkg__"],
    deps = [
        ":crossover2",
        ":dsp_helpers",
        ":eq2",
        "//cras/common:check",
        "@thesofproject_sof",
    ],
)

cc_library(
    name = "biquad",
    srcs = ["biquad.c"],
    hdrs = ["biquad.h"],
    deps = [
        ":dsp_helpers",
        "//cras/src/dsp/rust",
        "@thesofproject_sof",
    ],
)

cc_library(
    name = "crossover2",
    srcs = ["crossover2.c"],
    hdrs = ["crossover2.h"],
    deps = [
        ":biquad",
        ":dsp_helpers",
        "@thesofproject_sof",
    ],
)

cc_library(
    name = "drc_math",
    srcs = ["drc_math.c"],
    hdrs = ["drc_math.h"],
    visibility = ["//cras/src/dsp/tests:__pkg__"],
)

cc_library(
    name = "dsp_util",
    srcs = ["dsp_util.c"],
    hdrs = ["dsp_util.h"],
    visibility = [
        "//cras/benchmark:__pkg__",
        "//cras/src/dsp/tests:__pkg__",
    ],
    deps = ["//cras/src/common:cras_types"],
)

# Allow tests to not specify all headers.
cc_library(
    name = "all_headers",
    testonly = True,
    hdrs = glob(include = ["*.h"]),
    textual_hdrs = glob(include = ["*.c"]),  # Allow including sources
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

# Allow tests to use sources directly
exports_files(
    glob(include = [
        "*.c",
    ]),
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

cc_test(
    name = "dcblock_test",
    srcs = ["dcblock_test.cc"],
    deps = [
        ":dsp",
        "//cras/src/dsp/rust",
        "@pkg_config//gtest",
        "@pkg_config//gtest_main",
    ],
)
