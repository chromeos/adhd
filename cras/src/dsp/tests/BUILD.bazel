# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("//:utils.bzl", "require_config")

cc_library(
    name = "dsp_test_util",
    srcs = ["dsp_test_util.c"],
    hdrs = ["dsp_test_util.h"],
)

cc_library(
    name = "raw",
    srcs = ["raw.c"],
    hdrs = ["raw.h"],
)

cc_binary(
    name = "crossover_test",
    srcs = ["crossover_test.c"],
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/src/dsp",
    ],
)

cc_binary(
    name = "crossover2_test",
    srcs = ["crossover2_test.c"],
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/src/dsp",
    ],
)

cc_binary(
    name = "dcblock_test",
    srcs = ["dcblock_test.c"],
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/src/dsp",
        "//cras/src/dsp/rust",
    ],
)

cc_binary(
    name = "drc_test",
    srcs = ["drc_test.c"],
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/src/dsp",
    ],
)

cc_binary(
    name = "dsp_util_test",
    srcs = ["dsp_util_test.c"],
    deps = [
        "//cras/src/dsp:drc_math",
        "//cras/src/dsp:dsp_util",
    ],
)

cc_binary(
    name = "eq_test",
    srcs = ["eq_test.c"],
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/src/dsp",
        "//cras/src/dsp/rust",
    ],
)

cc_binary(
    name = "eq2_test",
    srcs = ["eq2_test.c"],
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/src/dsp",
    ],
)

cc_test(
    name = "dsp_golden_unittest_rust",
    srcs = ["dsp_golden_unittest.cc"],
    data = [
        "@the_quick_brown_fox_golden_testdata",
    ],
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/common:check",
        "//cras/src/dsp/rust",
        "@pkg_config//gtest",
        "@pkg_config//gtest_main",
    ],
)

cc_binary(
    name = "cmpraw",
    srcs = ["cmpraw.c"],
    deps = [
        ":raw",
    ],
)

cc_binary(
    name = "am_test",
    srcs = ["am_test.c"],
    target_compatible_with = require_config("//:ml_build"),
    deps = [
        ":dsp_test_util",
        ":raw",
        "//cras/src/dsp:am",
        "//cras/src/server:cras_fmt_conv_ops",
    ],
)

# Allow tests to not specify all headers.
cc_library(
    name = "all_headers",
    testonly = True,
    hdrs = glob(include = ["*.h"]),
    textual_hdrs = glob(include = ["*.c"]),  # Allow including sources
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

# Allow tests to use sources directly
exports_files(
    glob(include = [
        "*.c",
    ]),
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)
