# Copyright 2021 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

cc_library(
    name = "cras_mix",
    srcs = [
        "cras_mix.c",
        "cras_mix.h",
    ],
    local_defines = select({
        "//:x86_64_build": [
            "HAVE_SSE42=1",
            "HAVE_AVX=1",
            "HAVE_AVX2=1",
            "HAVE_FMA=1",
        ],
        "//conditions:default": [
            "HAVE_SSE42=0",
            "HAVE_AVX=0",
            "HAVE_AVX2=0",
            "HAVE_FMA=0",
        ],
    }),
    visibility = [
        "//cras/benchmark:__pkg__",
        "//cras/src/tests:__pkg__",
    ],
    deps = ["cras_mix_ops"] + select({
        "//:x86_64_build": [
            ":cras_mix_ops_avx",
            ":cras_mix_ops_avx2",
            ":cras_mix_ops_fma",
            ":cras_mix_ops_sse42",
        ],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "cras_mix_ops",
    srcs = [
        "cras_mix_ops.c",
        "cras_system_state.h",
    ],
    hdrs = ["cras_mix_ops.h"],
    deps = [
        "//cras/src/common:cras_alsa_card_info",
        "//cras/src/common:cras_types",
    ],
)

cc_library(
    name = "cras_mix_ops_sse42",
    srcs = [
        "cras_mix_ops.c",
        "cras_system_state.h",
    ],
    hdrs = ["cras_mix_ops.h"],
    copts = [
        "-msse4.2",
        "-ffast-math",
    ],
    local_defines = ["OPS_SSE42"],
    target_compatible_with = ["@platforms//cpu:x86_64"],
    deps = [
        "//cras/src/common:cras_alsa_card_info",
        "//cras/src/common:cras_types",
    ],
)

cc_library(
    name = "cras_mix_ops_avx",
    srcs = [
        "cras_mix_ops.c",
        "cras_system_state.h",
    ],
    hdrs = ["cras_mix_ops.h"],
    copts = [
        "-mavx",
        "-ffast-math",
    ],
    local_defines = ["OPS_AVX"],
    target_compatible_with = ["@platforms//cpu:x86_64"],
    deps = [
        "//cras/src/common:cras_alsa_card_info",
        "//cras/src/common:cras_types",
    ],
)

cc_library(
    name = "cras_mix_ops_avx2",
    srcs = [
        "cras_mix_ops.c",
        "cras_system_state.h",
    ],
    hdrs = ["cras_mix_ops.h"],
    copts = [
        "-mavx2",
        "-ffast-math",
    ],
    local_defines = ["OPS_AVX2"],
    target_compatible_with = ["@platforms//cpu:x86_64"],
    deps = [
        "//cras/src/common:cras_alsa_card_info",
        "//cras/src/common:cras_types",
    ],
)

cc_library(
    name = "cras_mix_ops_fma",
    srcs = [
        "cras_mix_ops.c",
        "cras_system_state.h",
    ],
    hdrs = ["cras_mix_ops.h"],
    copts = [
        "-mavx2",
        "-mfma",
        "-ffast-math",
    ],
    local_defines = ["OPS_FMA"],
    target_compatible_with = ["@platforms//cpu:x86_64"],
    deps = [
        "//cras/src/common:cras_alsa_card_info",
        "//cras/src/common:cras_types",
    ],
)

cc_library(
    name = "cras_alsa_helpers",
    srcs = [
        "cras_alsa_helpers.c",
    ],
    hdrs = ["cras_alsa_helpers.h"],
    visibility = ["//cras/benchmark:__pkg__"],
    deps = [
        "//cras/src/common:cras_types",
        "//cras/src/common:cras_util",
    ],
)

cc_library(
    name = "cras_alsa_ucm",
    srcs = [
        "cras_alsa_mixer_name.c",
        "cras_alsa_mixer_name.h",
        "cras_alsa_ucm.c",
        "cras_alsa_ucm_section.c",
    ],
    hdrs = [
        "cras_alsa_ucm.h",
        "cras_alsa_ucm_section.h",
    ],
    visibility = ["//cras/benchmark:__pkg__"],
    deps = [
        "//cras/common:check",
        "//cras/src/common:cras_string",
        "//cras/src/common:cras_types_internal",
        "//cras/src/common:cras_util",
        "//third_party/utlist",
    ],
)

cc_library(
    name = "cras_alsa_config",
    srcs = [
        "cras_alsa_card.h",
        "cras_alsa_config.c",
    ],
    hdrs = [
        "cras_alsa_config.h",
    ],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = [
        "//cras/src/common:blob_wrapper",
        "//cras/src/common:cras_alsa_card_info",
        "//third_party/strlcpy",
        "//third_party/utlist",
        "@pkg_config//alsa",
    ],
)

cc_library(
    name = "iniparser_wrapper",
    srcs = [
        "iniparser_wrapper.h",
    ],
    visibility = ["//cras/src/server/config:__pkg__"],
    deps = ["@iniparser"],
)

cc_library(
    name = "cras_volume_curve",
    srcs = [
        "cras_volume_curve.c",
        "cras_volume_curve.h",
    ],
    visibility = ["//cras/src/server/config:__pkg__"],
    deps = ["//cras/src/common"],
)

cc_library(
    name = "ewma_power",
    srcs = ["ewma_power.c"],
    hdrs = ["ewma_power.h"],
    deps = [
        ":cras_audio_area",
    ],
)

cc_library(
    name = "cras_audio_area",
    srcs = ["cras_audio_area.c"],
    hdrs = ["cras_audio_area.h"],
    deps = [
        ":cras_mix",
        "//cras/src/common",
    ],
)

cc_library(
    name = "cras_fmt_conv_ops",
    srcs = ["cras_fmt_conv_ops.c"],
    hdrs = ["cras_fmt_conv_ops.h"],
    visibility = ["//cras/src/dsp/tests:__pkg__"],
    deps = ["//cras/src/common"],
)

cc_library(
    name = "cras_sr",
    srcs = select({
        "//:ml_build": [
            "cras_sr.c",
            "cras_sr_bt_adapters.c",
            "cras_sr_bt_util.c",
        ],
        "//conditions:default": [
            "cras_sr_bt_adapters_stub.c",
            "cras_sr_bt_util_stub.c",
            "cras_sr_stub.c",
        ],
    }),
    hdrs = [
        "buffer_share.h",
        "cras_dsp.h",
        "cras_iodev.h",
        "cras_rstream.h",
        "cras_rstream_config.h",
        "cras_server_metrics.h",
        "cras_sr.h",
        "cras_sr_bt_adapters.h",
        "cras_sr_bt_util.h",
        "cras_stream_apm.h",
    ],
    deps = [
        ":cras_audio_area",
        ":cras_fmt_conv_ops",
        ":dsp_types",
        ":ewma_power",
        "//cras/server/platform/dlc:cc",
        "//cras/server/platform/features",
        "//cras/src/common",
        "//cras/src/server/rust:cc",
    ] + select({
        "//:ml_build": ["//cras/src/dsp:am"],
        "//conditions:default": [],
    }),
)

cc_library(
    name = "dsp_types",
    hdrs = [
        "cras_dsp_ini.h",
        "cras_dsp_module.h",
        "cras_dsp_offload.h",
        "cras_dsp_pipeline.h",
        "cras_expr.h",
    ],
    visibility = [
        "//cras/src/dsp:__pkg__",
        "//cras/src/dsp/c:__pkg__",
    ],
    deps = [
        ":iniparser_wrapper",
    ],
)

cc_library(
    name = "cras_observer_types",
    hdrs = [
        "cras_observer.h",
    ],
    visibility = ["//cras/src/common:__pkg__"],
    deps = [
        "//cras/src/common:cras_observer_ops",
    ],
)

cc_library(
    name = "cras_ramp",
    srcs = ["cras_ramp.c"],
    hdrs = ["cras_ramp.h"],
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

cc_library(
    name = "buffer_share",
    srcs = ["buffer_share.c"],
    hdrs = ["buffer_share.h"],
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

cc_library(
    name = "linear_resampler",
    srcs = ["linear_resampler.c"],
    hdrs = ["linear_resampler.h"],
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

cc_library(
    name = "polled_interval_checker",
    srcs = ["polled_interval_checker.c"],
    hdrs = ["polled_interval_checker.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = ["//cras/src/common:cras_util"],
)

cc_library(
    name = "cras_alert",
    srcs = ["cras_alert.c"],
    hdrs = ["cras_alert.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = ["//third_party/utlist"],
)

cc_library(
    name = "cras_tm",
    srcs = ["cras_tm.c"],
    hdrs = ["cras_tm.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = [
        "//cras/src/common:cras_util",
        "//third_party/utlist",
    ],
)

cc_library(
    name = "cras_gpio_jack",
    srcs = ["cras_gpio_jack.c"],
    hdrs = ["cras_gpio_jack.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = [
        "//cras/common:check",
        "//cras/src/common:cras_string",
        "//cras/src/common:cras_types",
    ],
)

cc_library(
    name = "cras_expr",
    srcs = ["cras_expr.c"],
    hdrs = ["cras_expr.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = [
        "//cras/src/common",
    ],
)

cc_library(
    name = "cras_utf8",
    srcs = ["cras_utf8.c"],
    hdrs = ["cras_utf8.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = [
        "//cras/src/common:cras_util",
        "@pkg_config//dbus-1",
    ],
)

cc_library(
    name = "softvol_curve",
    srcs = ["softvol_curve.c"],
    hdrs = ["softvol_curve.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = [
        ":cras_volume_curve",
        "//cras/common:check",
    ],
)

cc_library(
    name = "speak_on_mute_detector",
    srcs = ["speak_on_mute_detector.c"],
    hdrs = ["speak_on_mute_detector.h"],
    visibility = ["//cras/src/tests:__pkg__"],
    deps = [
        "//cras/src/common:cras_util",
    ],
)

cc_library(
    name = "libcrasserver",
    srcs = [
        "audio_thread.c",
        "audio_thread.h",
        "audio_thread_log.h",
        "cras_a2dp_endpoint.c",
        "cras_a2dp_endpoint.h",
        "cras_a2dp_info.c",
        "cras_a2dp_info.h",
        "cras_a2dp_iodev.c",
        "cras_a2dp_iodev.h",
        "cras_a2dp_manager.c",
        "cras_a2dp_manager.h",
        "cras_alsa_card.c",
        "cras_alsa_card.h",
        "cras_alsa_common_io.c",
        "cras_alsa_common_io.h",
        "cras_alsa_io.c",
        "cras_alsa_io.h",
        "cras_alsa_io_ops.c",
        "cras_alsa_io_ops.h",
        "cras_alsa_jack.c",
        "cras_alsa_jack.h",
        "cras_alsa_jack_private.h",
        "cras_alsa_mixer.c",
        "cras_alsa_mixer.h",
        "cras_alsa_plugin_io.c",
        "cras_alsa_usb_io.c",
        "cras_alsa_usb_io.h",
        "cras_audio_thread_monitor.c",
        "cras_audio_thread_monitor.h",
        "cras_bt_adapter.c",
        "cras_bt_adapter.h",
        "cras_bt_battery_provider.c",
        "cras_bt_battery_provider.h",
        "cras_bt_constants.h",
        "cras_bt_device.c",
        "cras_bt_device.h",
        "cras_bt_endpoint.c",
        "cras_bt_endpoint.h",
        "cras_bt_io.c",
        "cras_bt_io.h",
        "cras_bt_log.c",
        "cras_bt_log.h",
        "cras_bt_manager.c",
        "cras_bt_player.c",
        "cras_bt_player.h",
        "cras_bt_policy.c",
        "cras_bt_policy.h",
        "cras_bt_profile.c",
        "cras_bt_profile.h",
        "cras_bt_transport.c",
        "cras_bt_transport.h",
        "cras_capture_rclient.c",
        "cras_capture_rclient.h",
        "cras_control_rclient.c",
        "cras_control_rclient.h",
        "cras_dbus.c",
        "cras_dbus.h",
        "cras_dbus_control.c",
        "cras_dbus_control.h",
        "cras_dbus_util.c",
        "cras_dbus_util.h",
        "cras_device_monitor.c",
        "cras_device_monitor.h",
        "cras_dlc_manager.c",
        "cras_dsp.c",
        "cras_dsp.h",
        "cras_dsp_ini.c",
        "cras_dsp_ini.h",
        "cras_dsp_mod_builtin.c",
        "cras_dsp_module.h",
        "cras_dsp_offload.c",
        "cras_dsp_offload.h",
        "cras_dsp_pipeline.c",
        "cras_dsp_pipeline.h",
        "cras_empty_iodev.c",
        "cras_empty_iodev.h",
        "cras_ewma_power_reporter.c",
        "cras_ewma_power_reporter.h",
        "cras_feature_monitor.c",
        "cras_feature_monitor.h",
        "cras_fl_manager.c",
        "cras_fl_manager.h",
        "cras_fl_media.c",
        "cras_fl_media.h",
        "cras_fl_media_adapter.c",
        "cras_fl_media_adapter.h",
        "cras_fl_pcm_iodev.c",
        "cras_fl_pcm_iodev.h",
        "cras_floop_iodev.c",
        "cras_floop_iodev.h",
        "cras_fmt_conv.c",
        "cras_fmt_conv.h",
        "cras_hfp_ag_profile.c",
        "cras_hfp_ag_profile.h",
        "cras_hfp_alsa_iodev.c",
        "cras_hfp_alsa_iodev.h",
        "cras_hfp_iodev.c",
        "cras_hfp_iodev.h",
        "cras_hfp_manager.c",
        "cras_hfp_manager.h",
        "cras_hfp_slc.c",
        "cras_hfp_slc.h",
        "cras_hotword_handler.c",
        "cras_hotword_handler.h",
        "cras_iodev.c",
        "cras_iodev.h",
        "cras_iodev_list.c",
        "cras_iodev_list.h",
        "cras_lea_iodev.c",
        "cras_lea_iodev.h",
        "cras_lea_manager.c",
        "cras_lea_manager.h",
        "cras_loopback_iodev.c",
        "cras_loopback_iodev.h",
        "cras_main_thread_log.h",
        "cras_non_empty_audio_handler.c",
        "cras_non_empty_audio_handler.h",
        "cras_observer.c",
        "cras_observer.h",
        "cras_playback_rclient.c",
        "cras_playback_rclient.h",
        "cras_rclient.c",
        "cras_rclient.h",
        "cras_rclient_util.c",
        "cras_rclient_util.h",
        "cras_rstream.c",
        "cras_rstream.h",
        "cras_rstream_config.c",
        "cras_rstream_config.h",
        "cras_rtc.c",
        "cras_rtc.h",
        "cras_sco.c",
        "cras_sco.h",
        "cras_server.c",
        "cras_server.h",
        "cras_server_metrics.c",
        "cras_server_metrics.h",
        "cras_speak_on_mute_detector.c",
        "cras_speak_on_mute_detector.h",
        "cras_system_state.c",
        "cras_system_state.h",
        "cras_telephony.c",
        "cras_telephony.h",
        "cras_udev.c",
        "cras_udev.h",
        "cras_unified_rclient.c",
        "cras_unified_rclient.h",
        "dev_io.c",
        "dev_io.h",
        "dev_stream.c",
        "dev_stream.h",
        "float_buffer.h",
        "input_data.c",
        "input_data.h",
        "server_stream.c",
        "server_stream.h",
        "sidetone.c",
        "sidetone.h",
        "stream_list.c",
        "stream_list.h",
        "test_iodev.c",
        "test_iodev.h",
    ],
    hdrs = [
        "cras_alsa_plugin_io.h",
        "cras_bt_manager.h",
        "cras_dlc_manager.h",
    ],
    visibility = ["//cras/fuzz:__pkg__"],
    deps = [
        ":buffer_share",
        ":cras_alert",
        ":cras_alsa_config",
        ":cras_alsa_helpers",
        ":cras_alsa_ucm",
        ":cras_apm",
        ":cras_audio_area",
        ":cras_expr",
        ":cras_fmt_conv_ops",
        ":cras_gpio_jack",
        ":cras_mix",
        ":cras_ramp",
        ":cras_sr",
        ":cras_tm",
        ":cras_utf8",
        ":dsp_types",
        ":ewma_power",
        ":linear_resampler",
        ":polled_interval_checker",
        ":softvol_curve",
        ":speak_on_mute_detector",
        "//cras/common:check",
        "//cras/common:rust_common_cc",
        "//cras/server:cras_thread",
        "//cras/server:cras_trace",
        "//cras/server:main_message",
        "//cras/server/platform/features",
        "//cras/server/platform/features:override",
        "//cras/server/platform/segmentation",
        "//cras/server/s2:cc",
        "//cras/src/common",
        "//cras/src/dsp",
        "//cras/src/plc",
        "//cras/src/server/config",
        "//cras/src/server/rust:cc",
        "@pkg_config//alsa",
        "@pkg_config//dbus-1",
        "@pkg_config//libudev",
        "@pkg_config//speexdsp",
    ],
)

cc_library(
    name = "cras_apm",
    srcs = select({
        "//:apm_build": [
            "cras_apm_reverse.c",
            "cras_stream_apm.c",
        ],
        "//conditions:default": ["cras_stream_apm_noop.c"],
    }) + [
        "audio_thread.h",
        "buffer_share.h",
        "cras_dsp.h",
        "cras_iodev.h",
        "cras_iodev_list.h",
        "cras_rstream.h",
        "cras_rstream_config.h",
        "cras_server_metrics.h",
        "cras_speak_on_mute_detector.h",
        "dev_io.h",
        "polled_interval_checker.h",
        "speak_on_mute_detector.h",
    ],
    hdrs = [
        "cras_apm_reverse.h",
        "cras_stream_apm.h",
        "float_buffer.h",
    ],
    deps = [
        ":cras_audio_area",
        ":dsp_types",
        ":ewma_power",
        "//audio_processor/c:plugin_processor",
        "//cras/server:cras_thread",
        "//cras/server:main_message",
        "//cras/server/platform/dlc:cc",
        "//cras/server/platform/features",
        "//cras/server/s2:cc",
        "//cras/src/common",
        "//cras/src/dsp",
        "//cras/src/server/rust:cc",
        "//cras/common:rust_common_cc",
    ] + select({
        "//:apm_build": ["@webrtc_apm//webrtc_apm"],
        "//conditions:default": [],
    }),
)

cc_binary(
    name = "cras",
    srcs = ["cras.c"],
    visibility = ["//dist:__pkg__"],
    deps = [":libcrasserver"],
)

# Allow tests to not specify all headers.
cc_library(
    name = "all_headers",
    testonly = True,
    hdrs = glob(include = ["*.h"]),
    textual_hdrs = glob(
        # Allow including sources
        include = ["*.c"],
        # Disallow using cras_mix sources directly, should use the :cras_mix cc_library
        exclude = ["cras_mix*.c"],
    ),
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)

# Allow tests to use sources directly
exports_files(
    glob(
        include = ["*.c"],
        # Disallow using cras_mix sources directly, should use the :cras_mix cc_library
        exclude = ["cras_mix*.c"],
    ),
    visibility = [
        "//cras/src/tests:__pkg__",
    ],
)
