SectionVerb {
	Value.FullySpecifiedUCM "1"

	EnableSequence [
		disdevall ""
	]

	DisableSequence [
	]

	If.master {
		Condition {
			Type ControlExists
			Control "name='Master Playback Volume'"
		}
		True {
			EnableSequence [
				cdev "hw:PCH"
				cset "name='Master Playback Volume' 100%"
				cset "name='Master Playback Switch' on"
			]
		}
	}
	If.amute {
		Condition {
			Type ControlExists
			Control "name='Auto-Mute Mode'"
		}
		True {
			EnableSequence [
				cset "name='Auto-Mute Mode' off"
			]
		}
	}

	If.captureswitch {
		Condition {
			Type ControlExists
			Control "name='Capture Switch'"
		}
		True {
			EnableSequence [
				cset "name='Capture Switch' on"
				cset "name='Capture Volume' 60%"
			]
		}
	}

	If.dmic {
		Condition {
			Type ControlExists
			Control "name='Dmic0 Capture Volume'"
		}
		True {
			EnableSequence [
				cset "name='Dmic0 Capture Volume' 70%"
				cset "name='Dmic0 Capture Switch' on"
			]
		}
	}
}

SectionDevice."Headphone".0 {
	If.headphone {
		Condition {
			Type ControlExists
			Control "name='Headphone Playback Volume'"
		}
		True.Define {
			headphonemix "Headphone"
		}
		False.Define {
			headphonemix "Master"
		}
	}

	If.jackname {
		Condition {
			Type ControlExists
			Control "iface=CARD,name='Headphone Mic Jack'"
		}
		True.Define {
			headphonejack "HDA Intel PCH Headphone Mic"
		}
		False.If.front {
			Condition {
					Type ControlExists
					Control "iface=CARD,name='Front Headphone Jack'"
			}
			True.Define {
					headphonejack "HDA Intel PCH Front Headphone"
			}
			False.Define {
					headphonejack "HDA Intel PCH Headphone"
			}
		}
	}

	Value {
		PlaybackPCM "hw:PCH,0"
		PlaybackMixerElem "${var:headphonemix}"
		JackDev "${var:headphonejack}"
	}

	If.headphoneswitch {
		Condition {
			Type ControlExists
			Control "name='Headphone Playback Switch'"
		}
		True {
			EnableSequence [
				cdev "hw:PCH"
				cset "name='Headphone Playback Switch' on"
			]

			DisableSequence [
				cdev "hw:PCH"
				cset "name='Headphone Playback Switch' off"
			]
		}
	}
}

SectionDevice."Speaker".0 {
	If.speakermixer {
		Condition {
			Type ControlExists
			Control "name='Speaker Playback Volume'"
		}
		True.Define {
			speakermix "Speaker"
		}
		False.Define {
			speakermix "Master"
		}
	}
	Value {
		PlaybackPCM "hw:PCH,0"
		PlaybackMixerElem "${var:speakermix}"
	}
	If.bass {
			Condition {
				Type ControlExists
				Control "name='Bass Speaker Playback Switch'"
			}
			True {
				EnableSequence [
					cdev "hw:PCH"
					cset "name='Bass Speaker Playback Switch' on"
				]

				DisableSequence [
					cdev "hw:PCH"
					cset "name='Bass Speaker Playback Switch' off"
				]
			}
	}
	If.speakerswitch {
		Condition {
			Type ControlExists
			Control "name='Speaker Playback Switch'"
		}
		True {
			EnableSequence [
				cdev "hw:PCH"
				cset "name='Speaker Playback Switch' on"
			]

			DisableSequence [
				cdev "hw:PCH"
				cset "name='Speaker Playback Switch' off"
			]
		}
	}
}

Define.SourceControl ""
Define.MicJackEnum ""

If.inputsourcectl {
	Condition {
		Type ControlExists
		Control "name='Input Source'"
	}
	True {
		Define.SourceControl "Input Source"

	}
	False.If.capturesourcectl {
		Condition {
			Type ControlExists
			Control "name='Capture Source'"
		}
		True.Define.SourceControl "Capture Source"
	}
}

If.headsetmicenum {
	Condition {
		Type ControlExists
		Control "name='${var:SourceControl}'"
		ControlEnum "Headset Mic"
	}
	True.Define.MicJackEnum "Headset Mic"
	False.If.UseMic {
		Condition {
			Type ControlExists
			Control "name='${var:SourceControl}'"
			ControlEnum "Mic"
		}
		True.Define.MicJackEnum "Mic"
		False.If.UseMic.Condition {
			Type ControlExists
			Control "name='${var:SourceControl}'"
			ControlEnum "Headphone Mic"
		}
		True.Define.MicJackEnum "Headphone Mic"
	}
}

SectionDevice."Mic".0 {
	Define.MicJackControl ""
	If.hpmicjack {
		Condition {
			Type ControlExists
			Control "iface=CARD,name='Headphone Mic Jack'"
		}
		True.Define.MicJackControl "Headphone Mic Jack"
		False.If.hsmicjack {
			Condition {
				Type ControlExists
				Control "iface=CARD,name='Headset Mic Jack'"
			}
			True.Define {
				MicJackControl "Headset Mic Jack"
			}
			False.If.micjack {
				Condition {
					Type ControlExists
					Control "iface=CARD,name='Mic Jack'"
				}
				True.Define{
					MicJackControl "Mic Jack"
				}
			}
		}
	}
	Value {
		CapturePCM "hw:PCH,0"
		If.MicJackControlUndefined {
			Condition {
				Type String
				Empty "${var:MicJackControl}"
			}
			True {
				JackDev "HDA Intel PCH Mic"
			}
			False {
				JackControl "${var:MicJackControl}"
			}
		}
	}
	If.captureswitch {
		Condition {
			Type ControlExists
			Control "name='Capture Switch'"
		}
		True {
			Value.CaptureMixerElem "Capture"
		}
		False {
			Value.CaptureMixerElem "Master"
		}
	}
	If.SourceControlUndefined {
		Condition {
			Type String
			Empty "${var:SourceControl}"
		}
		False {
			EnableSequence [
				cdev "hw:PCH"
    		    cset "name='${var:SourceControl}' '${var:MicJackEnum}'"
			]
		}

	}


}


SectionDevice."Internal Mic".0 {
		Value {
			CapturePCM "hw:PCH,0"
			CaptureMixerElem "Capture"
		}

		If.internalmic {
			Condition {
				Type ControlExists
				Control "name='${var:SourceControl}'"
				ControlEnum "Internal Mic"
			}
			True {
				EnableSequence [
					cdev "hw:PCH"
	    		    cset "name='${var:SourceControl}' 'Internal Mic'"
				]
			}
		}
}



Include.hifi-hdmi.File "HiFi-hdmi.conf"
